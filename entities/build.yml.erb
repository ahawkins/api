---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: Build
description: Represents a build.
stability: prototype
strictProperties: true
type:
- object
definitions:
  id:
    description: unique identifier of build
    readOnly: true
    format: uuid
    type:
    - string

  identity:
    anyOf:
    - "$ref": "/schemata/build#/definitions/id"

  number:
    description: a number of the build on branch
    readOnly: true
    type:
      - integer

  stopper_name:
    description: name of the person who stopped the build
    example: "Monalisa Octocat"
    readOnly: true
    type:
    - string

  stopper_email:
    description: email address of the person who stopped the build
    example: "support@github.com"
    readOnly: true
    type:
    - string

  url:
    description: a link to the build in API
    example: "https://semaphoreci.com/api/internal/{project_owner_name/{project_name}/builds{/id}"
    readOnly: true
    type:
      - string

  html_url:
    description: a link to the build in applicaiton
    example: "https://semaphoreci.com/{project_owner_username}/{project_name}/branches/{branch_name}/builds/{build_id}"
    readOnly: true
    type:
      - string

  tips_url:
    description: a link to build's tips
    example: "https://semaphoreci.com/api/internal/{project_owner_name/{project_name}/builds/{build_id}/tips"
    readOnly: true
    type:
      - string

  next_build_html_url:
    description: a link to next build on the same branch
    example: "https://semaphoreci.com/api/internal/{project_owner_name/{project_name}/builds/{build_id + 1}"
    readOnly: true
    type:
      - string

  previous_build_html_url:
    description: a link to previous build on the same branch
    example: "https://semaphoreci.com/api/internal/{project_owner_name/{project_name}/builds/{build_id - 1}"
    readOnly: true
    type:
      - string

  manual_deploy_html_url:
    description: a link for triggering manual deploy
    example: "https://semaphoreci.com/{project_owner_name/{project_name}/builds/{build_id}/manual_deploy"
    readOnly: true
    type:
      - string

  status:
    description: status of the build
    readOnly: true
    example: "queued"
    type:
      - string
    enum:
      - queued
      - running
      - finished

  result:
    description: Type of a thread
    readOnly: true
    example: "failed"
    type:
      - string
    enum:
      - failed
      - passed
      - stopped
      - canceled

  status_icon:
    description: status icon css class
    readOnly: true
    example: "c-filter-projects_icon_passed"
    type:
      - string
    enum:
      - c-filter-projects_icon_passed
      - c-filter-projects_icon_failed
      - c-filter-projects_icon_canceled
      - c-filter-projects_icon_stopped
      - c-filter-projects_icon_cant-build
      - c-filter-projects_icon_building
      - c-filter-projects_icon_queued

  status_label:
    description: build status lablel(could contain html)
    readOnly: true
    example: "passed"
    type:
      - string
    enum:
      - failed
      - queued
      - passed
      - stopped
      - canceled
      - "::html-spinner:: building"
      - "::html-spinner:: stopping"

  status_label_class:
    description: build lablel css class
    readOnly: true
    example: "label-primary"
    type:
      - string
    enum:
      - label-primary
      - label-danger
      - label-queued
      - label-building
      - label-canceled

  created_at:
    description: when build was created
    format: date-time
    type:
    - string

  updated_at:
    description: when build was updated
    format: date-time
    type:
    - string

  started_at:
    description: when build was started
    format: date-time
    type:
    - string

  finished_at:
    description: when build was finished
    format: date-time
    type:
    - string

links:
- description: List existing builds.
  href: "/<%= identity(:owner, :project) %>/builds"
  method: GET
  rel: instances
  title: List ✖

- description: Create a new build. If `commit_sha` is not present, last commit on branch will be used.
  href: "/<%= identity(:owner, :project) %>/builds"
  method: POST
  rel: create
  schema:
    properties:
      branch_id:
        "$ref": "/schemata/branch#/definitions/id"
      commit_sha:
        "$ref": "/schemata/commit#/definitions/sha"
    required:
      - branch_id
    type:
    - object
  title: Create

- description: Info for existing build.
  href: "/<%= identity(:owner, :project) %>/builds/<%= identity(:build) %>"
  method: GET
  rel: self
  title: Info ✖

- description: List existing builds on a branch.
  href: "/<%= identity(:owner, :project) %>/branches/<%= identity(:branch) %>/builds"
  method: GET
  rel: instances
  title: List for Branch ✖

- description: Update an existing build. (Stop or re-run build)
  href: "/<%= identity(:owner, :project) %>/builds/<%= identity(:build) %>"
  method: PATCH
  rel: update
  schema:
    properties:
      status:
        "$ref": "/schemata/build#/definitions/status"
        enum:
          - queued
          - stopping
    required:
      - status
    type:
    - object
  title: Update

- description: Delete an existing build. (Remove from queue)
  href: "/<%= identity(:owner, :project) %>/builds/<%= identity(:build) %>"
  method: DELETE
  rel: destroy
  title: Delete

properties:
  id:
    "$ref": "/schemata/build#/definitions/id"
  number:
    "$ref": "/schemata/build#/definitions/number"
  status:
    "$ref": "/schemata/build#/definitions/status"
  result:
    "$ref": "/schemata/build#/definitions/result"
  status_icon:
    "$ref": "/schemata/build#/definitions/status_icon"
  status_label:
    "$ref": "/schemata/build#/definitions/status_label"
  status_label_class:
    "$ref": "/schemata/build#/definitions/status_label_class"
  last_commit:
    "$ref": "/schemata/commit"
  stopper_name:
    "$ref": "/schemata/build#/definitions/stopper_name"
  stopper_email:
    "$ref": "/schemata/build#/definitions/stopper_email"
  url:
    "$ref": "/schemata/build#/definitions/url"
  tips_url:
    "$ref": "/schemata/build#/definitions/tips_url"
  next_build_html_url:
    "$ref": "/schemata/build#/definitions/next_build_html_url"
  previous_build_html_url:
    "$ref": "/schemata/build#/definitions/previous_build_html_url"
  html_url:
    "$ref": "/schemata/build#/definitions/html_url"
  created_at:
    "$ref": "/schemata/build#/definitions/created_at"
  updated_at:
    "$ref": "/schemata/build#/definitions/updated_at"
  started_at:
    "$ref": "/schemata/build#/definitions/started_at"
  finished_at:
    "$ref": "/schemata/build#/definitions/finished_at"

id: schemata/build
