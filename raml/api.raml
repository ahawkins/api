#%RAML 1.0
title: Semaphore
version: v2
baseUri: https://api.semaphoreci.com
mediaType: application/json

types:
  Error:
    type: object
    properties:
      message: string
  UserPost:
    type: object
    properties:
      name: string
  User:
    type: UserPost
    properties:
      id: integer
  Org:
    type: object
    properties:
      id: integer
      name: string
  TeamPost:
    type: object
    properties:
      name: string
      permission:
        enum: [read, write, admin]
      description?: string
  Team:
    type: TeamPost
    properties:
      id: integer
      url: string
  ProjectPost:
    type: object
    properties:
      name: string
      description?: string
  Project:
    type: ProjectPost
    properties:
      id: integer
  SharedConfigPost:
    type: object
    properties:
      name: string
      description?: string
  SharedConfig:
    type: SharedConfigPost
    properties:
      id: integer

traits:
  withRequestItem:
    body:
      application/json:
        type: <<item>>
  withResponseItem:
    responses:
      200:
        body:
          application/json:
            type: <<item>>
  withResponseItems:
    responses:
      200:
        body:
          application/json:
            type: <<item>>[]
  withCreateResponse:
    responses:
      201:
        body:
          application/json:
            type: <<item>>
  withClientError:
    responses:
      400:
        body:
          application/json:
            type: Error
  withNotFoundError:
    responses:
      404:
        body:
          application/json:
            type: Error
  withPreconditionFailedError:
    responses:
      412:
        body:
          application/json:
            type: Error

/users:
  description: Manage Semaphore users
  get:
    description: List all users
    is: [ withResponseItems: {item : User}, withClientError ]

  post:
    description: Create new user
    is: [ withRequestItem: {item : UserPost},
          withCreateResponse: {item : User},
          withClientError ]
    body:
      example: {name: jon}
            # example: { "message" : "User 'jon' already exists" }
  /{user_id}:
    get:
      description: Show {user_id} user
    delete:
      description: Delete {user_id} user

/orgs:
  description: Manage Semaphore organizations
  get:
    description: Get list of all organizations
    is: [withResponseItems: {item : Org}]
  /{org_name}:
    get:
      description: Get organization details
      is: [withResponseItem: {item : Org}, withNotFoundError]
    /teams:
      get:
        description: List teams that belong to {org_name} organisation
        is: [withResponseItems: {item : Team}]
      post:
        description: Create team within the {org_name} organization
        is: [withRequestItem: {item : TeamPost},
             withResponseItem: {item : Team},
             withNotFoundError,
             withPreconditionFailedError]
    /projects:
      get:
        description: List projects that belong to {org_name} organisation
        is: [withResponseItems: {item : Project}]
      post:
        description: Create projects within the {org_name} organization
        is: [withRequestItem: {item : ProjectPost},
             withResponseItem: {item : Project},
             withNotFoundError,
             withPreconditionFailedError]
    /shared-configurations:
      get:
        description: List shared configurations that belong to {org_name} organisation
        is: [withResponseItems: {item : SharedConfig}]
      post:
        description: Create shared configuration within the {org_name} organization
        is: [withRequestItem: {item : SharedConfigPost},
            withResponseItem: {item : SharedConfig},
            withNotFoundError,
            withPreconditionFailedError]

/teams/{team_id}:
  description: Manage Semaphore teams
  get:
    description: Get team details
  delete:
    description: Delete team
  patch:
    description: Update team
  /users:
    description: Manage relations between {team_id} team and itc members
    get:
      description: List {team_id} team members
    /{user_id}:
      post:
        description: Grant {user_id} user membership in {team_id} team
      delete:
        description: Revoke {user_id} user membership in {team_id} team
  /projects:
    description: Manage relations between {team_id} team and itc projects
    get:
      description: List all projects belonging to {team_id} team
    post:
      description: Create a project belonging to {team_id} team
  /shared-configurations:
    get:
      description: List all shared configurations added to {team_id} team
    /{sc_id}:
      description: Manage relations between {team_id} team and
                    {sc_id} shared configuration
      post:
        description: Add {sc_id} shared configuration to {team_id} team
      delete:
        description: Remove {sc_id} shared configuration from {team_id} team

/projects/{project_id}:
  description: Manage Semaphore projects
  get:
    description: Show {project_id} project details
  delete:
    description: Delete {project_id} project
  patch:
    description: Update {project_id} project
  /shared-configurations:
    get:
      description: List all shared configurations attached to
                    {project_id} project
    /{sc_id}:
      post:
        description: Attach {sc_id} shared configuration to {project_id} project
      delete:
        description: Dettach {sc_id} shared configuration from {project_id} project
  /shared-environment-variables:
    get:
      description: List all shared env variables connected to
                    {project_id} project
    /{sev_id}:
      post:
        description: Connect {sev_id} shared env var to
                      {project_id} project
      delete:
        description: Dissconnect {sev_id} shared env var from
                      {project_id} project
  /shared-configuration-files:
    get:
      description: List all shared conf files connected to
                    {project_id} project
    /{scf_id}:
      post:
        description: Connect {scf_id} shared conf file to
                      {project_id} project
      delete:
        description: Dissconnect {scf_id} shared conf file from
                      {project_id} project

/shared-configurations:
  description: Manage Semaphore shared configurations
  /{sc_id}:
    get:
      description: Show {sc_id} shared config details
    delete:
      description: Delete {sc_id} shared config
    patch:
      description: Update {sc_id} shared config
    /shared-environment-variables:
      get:
        description: List all shared env variables belonging to {sc_id} shared config
      post:
        description: Create shared environment variable within {sc_id} shared config
    /shared-configuration-files:
      get:
        description: List all shared config files belonging to {sc_id} shared config
      post:
        description: Create shared config file within {sc_id} shared configuration

/shared-environment-variables:
  description: Manage Semaphore shared environment variables
  /{sev_id}:
    get:
      description: Show {sev_id} shared env variable details
    delete:
      description: Delete {sev_id} shared env variable
    patch:
      description: Update {sev_id} shared env variable

/shared-configuration-files:
  description: Manage Semaphore shared configuration files
  /{scf_id}:
    get:
      description: Show {scf_id} shared config file details
    delete:
      description: Delete {scf_id} shared config file
    patch:
      description: Update {scf_id} shared config file
