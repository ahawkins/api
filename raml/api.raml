#%RAML 1.0
title: Semaphore
version: v2
baseUri: https://api.semaphoreci.com/v2
mediaType: application/json

types:
  UUID:
    type: string
    pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$

  time:
    type: datetime
    format: rfc3339

  Error:
    type: object
    properties:
      message: string

  Org:
    type: object
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      name:
        type: string
        example: "Rendered Text"
      url:
        type: string
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      username:
        type: string
        example: "renderedtext"
      created_at: time
      updated_at: time

  TeamPatch:
    type: object
    properties:
      name?:
        type: string
        example: "developers"
      permission?:
        enum: [read, write, admin]
        example: "write"
      description?:
        type: string
        example: "Developers team"

  TeamPost:
    type: object
    properties:
      name:
        type: string
        example: "developers"
      permission:
        enum: [read, write, admin]
        example: "write"
      description?:
        type: string
        example: "Developers team"

  Team:
    type: TeamPost
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      updated_at: time
      created_at: time

  Project:
    type: object
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      name:
        type: string
        example: "elixir-lang"
      updated_at: time
      created_at: time

  SharedConfigPatch:
    type: object
    properties:
      name?:
        type: string
        example: "AWS Tokens"
      description?:
        type: string
        example: "AWS tokens for deployment"

  SharedConfigPost:
    type: object
    properties:
      name:
        type: string
        example: "AWS Tokens"
      description?:
        type: string
        example: "AWS tokens for deployment"

  SharedConfig:
    type: SharedConfigPost
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      created_at: time
      updated_at: time

  EnvVarPatch:
    type: object
    properties:
      name?:
        type: string
        example: "API_TOKEN"
      content?:
        type: string
        example: "8CgLAxXn"

  EnvVarPost:
    type: object
    properties:
      name:
        type: string
        example: "API_TOKEN"
      content:
        type: string
        example: "8CgLAxXn"
      encrypted:
        type: boolean
        example: true

  EnvVar:
    type: EnvVarPost
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        example: "https://api.semaphoreci.com/v2/env_vars/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      shared:
        type: boolean
        example: true
      created_at: time
      updated_at: time

  ConfigFilePatch:
    type: object
    properties:
      path?:
        type: string
        example: ".credentials"
      content?:
        type: string
        example: "password: ec2c9f6f64b5"

  ConfigFilePost:
    type: object
    properties:
      path:
        type: string
        example: ".credentials"
      content:
        type: string
        example: "password: ec2c9f6f64b5"
      encrypted:
        type: boolean
        example: true

  ConfigFile:
    type: ConfigFilePost
    properties:
      id:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        example: "https://api.semaphoreci.com/v2/config_files/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      shared:
        type: boolean
        example: true
      created_at: time
      updated_at: time

  User:
    type: object
    properties:
      uid:
        type: UUID
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      email:
        type: string
        example: "example@test.com"
      username:
        type: string
        example: "johndoe"
      name:
        type: string
        example: "John Doe"
      created_at: time
      updated_at: time

traits:
  withRequestItem:
    body:
      application/json:
        type: <<item>>
  withResponseItem:
    responses:
      200:
        body:
          application/json:
            type: <<item>>
  withResponseItems:
    responses:
      200:
        body:
          application/json:
            type: <<item>>[]
  withCreateResponse:
    responses:
      201:
        body:
          application/json:
            type: <<item>>
  withNoBodyResponse:
    responses:
      204:
  withClientError:
    responses:
      400:
        body:
          application/json:
            type: Error
  withNotFoundError:
    responses:
      404:
        body:
          application/json:
            type: Error
  withPreconditionFailedError:
    responses:
      412:
        body:
          application/json:
            type: Error

/orgs:
  get:
    description: List your organizations
    is: [withResponseItems: {item : Org}]

  /{username}:
    get:
      description: Get an organization
      is: [withResponseItem: {item : Org}, withNotFoundError]

  /{org_username}:
    /teams:
      get:
        description: List teams in an organization
        is: [withResponseItems: {item : Team}]
      post:
        description: Create a team in an organization
        is: [withRequestItem: {item : TeamPost},
             withResponseItem: {item : Team},
             withNotFoundError,
             withPreconditionFailedError]
    /projects:
      get:
        description: List projects in an organization
        is: [withResponseItems: {item : Project}]
    /shared_configs:
      get:
        description: List shared configurations in an organization
        is: [withResponseItems: {item : SharedConfig}]
      post:
        description: Create shared configuration in an organization
        is: [withRequestItem: {item : SharedConfigPost},
            withResponseItem: {item : SharedConfig},
            withNotFoundError,
            withPreconditionFailedError]
    /users:
      get:
        description: List all users for a organization
        is: [withResponseItems: {item : User}, withNotFoundError]

/teams:
  /{id}:
    get:
      description: Get a team
      is: [withResponseItem: {item : Team}, withNotFoundError]
    delete:
      description: Delete a team
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a team
      is: [withRequestItem: {item : TeamPatch}, withResponseItem: {item : Team}, withNotFoundError]

  /{team_id}:
    /shared_configs:
      get:
        description: List shared configurations in a team
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          description: Add a shared configuration to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Remove shared configuration from a team
          is: [withNoBodyResponse, withNotFoundError]

    /users:
      get:
        description: List members of a team
        is: [withResponseItems: {item : User}, withNotFoundError]
      /{user_id}:
        post:
          description: Add user to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Remove user from a team
          is: [withNoBodyResponse, withNotFoundError]

    /projects:
      get:
        description: List project added to a team
        is: [withResponseItems: {item : Project}, withNotFoundError]

      /{project_id}:
        post:
          description: Add project to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Remove project from a team
          is: [withNoBodyResponse, withNotFoundError]

/projects:
  /{project_id}:
    /shared_configs:
      get:
        description: List shared configurations attached to a project
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          description: Attach a shared configuration to a project
          is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
        delete:
          description: Dettach a shared configuration from a project
          is: [withNoBodyResponse, withNotFoundError]

    /env_vars:
      get:
        description: List environment variables connected to a project
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      /{env_var_id}:
        post:
          description: Connect a shared environment variable to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Dissconnect a shared environment variable from a project
          is: [withNoBodyResponse, withNotFoundError]

    /config_files:
      get:
        description: List config files connected to a project
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      /{config_file_id}:
        post:
          description: Connect a shared config file to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Dissconnect a shared config file from a project
          is: [withNoBodyResponse, withNotFoundError]

    /users:
      get:
        description: List all users fo a project
        is: [withResponseItems: {item : User}, withNotFoundError]

/shared_configs:
  /{id}:
    get:
      description: Get a shared configuration
      is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
    delete:
      description: Delete a shared configuration
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a shared configuration
      is: [withRequestItem: {item : SharedConfigPatch},
          withResponseItem: {item : SharedConfig}, withNotFoundError]

  /{shared_config_id}:
    /env_vars:
      get:
        description: List environment variables belonging to a shared configuration
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      post:
        description: Create environment variable within a shared configuration
        is: [withRequestItem: {item : EnvVarPost},
            withResponseItem: {item : EnvVar}, withNotFoundError]
    /config_files:
      get:
        description: List config files belonging to a shared configuration
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      post:
        description: Create a config file within a shared configuration
        is: [withRequestItem: {item : ConfigFilePost},
            withResponseItem: {item : ConfigFile}, withNotFoundError]

/env_vars:
  /{id}:
    get:
      description: Get an environment variable
      is: [withResponseItem: {item : EnvVar}, withNotFoundError]
    delete:
      description: Delete an environment variable
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update an environment variable
      is: [withRequestItem: {item : EnvVarPatch},
          withResponseItem: {item : EnvVar}, withNotFoundError]

/config_files:
  /{id}:
    get:
      description: Get a config file
      is: [withResponseItem: {item : ConfigFile}, withNotFoundError]
    delete:
      description: Delete a config file
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a config file
      is: [withRequestItem: {item : ConfigFilePatch},
          withResponseItem: {item : ConfigFile}, withNotFoundError]
